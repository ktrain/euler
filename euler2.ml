(* problem solvers for problems 25 *)

#use "list.ml"
#use "math.ml"
#use "bigs.ml"
#use "primes.ml"

(* problem 25:
 * return the first term in the Fibonacci sequence which contains n digits
 * (1000)*)
let p25 n =
  let rec helper i (fib1,fib2) =
    let fib = bigAdd fib1 fib2 in
    if List.length fib >= n then i
    else helper (succ i) (fib,fib1)
  in helper 1 (bigZero,bigOne)


(* problem 3:
 * return the largest prime factor of n (600851475143) *)
(*let p3 n =
  let rec helper x =
  match x with*)


(* problem 10:
 * return the sum of all the primes below n (2000000) *)
let p10 n =
  let sieve = eratosthenes n in
  sum_list sieve


(* problem 29:
 * return the number if distinct terms in the sequence generated by a^b for
 * 2 <= a <= n and 2 <= b <= n (100) *)
(*let p29 n =
  let rec outer i l =
    
  let rec inner j l =
    
  in outer 2 []*)


(* problem 14:
 * { n -> n/2 if n is even
 * { n -> 3n + 1 if n is odd
 * using this rule on the positive integers, a sequence is produced which is
 * thought to end with 1 for any n (Collatz conjecture). find the number below
 * m (1000000) which produces the longest chain *)

